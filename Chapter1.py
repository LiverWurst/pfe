#
print('Chapter 1 -- Paragraphs of Code')
print("")
print("These are reserved words:")
print("")
print("false, class, return, is, finally, None,")
print("if, for, lambda, continue, True, def, from,")
print("while, nonlocal, and, del, global, not, with,")
print("as, elif, try, or, yield, assert, else, import,")
print("pass, break, except, in, raise")
print("")
#
print('Python Scripts')
print('')
print('*Interactive Python is good for experiements and programs of 3-4 lines long.')
print('')
print('*Most programs are much longer, so we type them into a file and tell Python')
print('to run the commands in the file')
print('')
print('*In a sense, we "giving Python a script"')
print('')
print('*As a convention, we add ".py" as the suffex on the end of these files to ')
print('indicate they contain Python code.')
print('')
# Sequential steps simply follow each other.
print('These are Sequential Steps:')
print('x = 2')
print('print(x)')
print(2)
print('x = x + 2')
print('print(x)')
print(4)
print('')
# Conditional steps are true or false statements.
print('This is an example of Conditional Steps')
print('x = 5')
print('if x < 10:')
print('     print("Smaller")')
print('if x > 20:')
print('     print("Bigger")')
print('Finis')
print('')
# Repeated steps are questioning and looping. Loops (repeated steps) have
# "iteration variables" that change each time through a loop
print('This is an example of Repeated Steps')
print('n = 5')
print('while n > 0 :')
print('     print(n)')
print('n = n -1')
print('print("Blastoff!")')
